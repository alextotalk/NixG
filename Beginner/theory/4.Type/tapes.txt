http://golang-book.ru/chapter-03-types.html

https://rtfm.co.ua/books-translations/go-s-nulya/go-chast-3-tipy-dannyx/

byte (то же самое, что uint8) и rune (то же самое, что int32)
- знать все типы данных
- уметь производить манипуляции с типами
https://www.digitalocean.com/community/tutorials/how-to-convert-data-types-in-go-ru
Чтобы проверить ваши типы данных, вы можете использовать fmt.Printf и %T со следующим синтаксисом:
a := strconv.Itoa(12)

 a := "my string"

    b := []byte(a)

    c := string(b)

fmt.Printf("index data type:    %T\n", index)
fmt.Printf("bigIndex data type: %T\n", bigIndex)
- область видимости
var x int64 = 57

var y float64 = float64(x)

fmt.Printf("%.2f\n", y) //57.00

var big int64 = 129
var little = int8(big) //-127

var f float64 = 390.8
var i int = int(f)

fmt.Printf("f = %.2f\n", f)
fmt.Printf("i = %d\n", i)

Output
f = 390.80
i = 390


1	Boolean типы
Булевый, или логический тип данных, который имеет одно из двух предопределённых
значений — true или false

2	Числовые типы
Арифметические типы данных, которые представляют целочисленное (integer) значение,
или число с плавающей точкой (floating point)

3	Строковые типы
Строковый тип представляет набор строковых значений, которое является последовтаельностью байт.
Строки являются неизменямым (immutable) типом данных, т.е.
после создания строки — невозможно изменить её значение.

4	Производные типы
Сюда входят: (a) указатели (pointer), (b) массивы (array), (c) структуры (structure),
(d) юнионы, или объединения (union) а так же (e) функции f) срезы (slice) g)
интерфейсы (interface) i) коллекции, или ассоциативный массивы (map) j) каналы (channel)

Целочисленные типы
Предопределённые архитектурно-независимые типы данных:

SR.NO.	TYPES AND DESCRIPTION
1	uint8
Беззнаковое (unsigned) 8-bit целое (от 0 до 255)

2	uint16
Беззнаковое 16-bit целое (от 0 до 65535)

3	uint32
Беззнаковое 32-bit целое (от 0 до 4294967295)

4	uint64
Беззнаковое 64-bit целое (от 0 до 18446744073709551615)

5	int8
Знаковое (signed) 8-bit целое (от -128 до 127)

6	int16
Знаковое 16-bit целое (от -32768 до 32767)

7	int32
Знаковое 32-bit целое (от -2147483648 до 2147483647)

8	int64
Знаковое 64-bit целое (от -9223372036854775808 до 9223372036854775807)

Числа с плавающей точкой (floating)
SR.NO.	TYPES AND DESCRIPTION
1	float32
32-bit число с плавающей точкой формата IEEE-754

2	float64
64-bit число с плавающей точкой формата  IEEE-754

3	complex64
комплексные числа (complex numbers) с float32 вещественной и мнимой частями

4	complex128
комплексные числа с float64 вещественной и мнимой частями

Другие числовые типы
1	byte
то же, что uint8

2	rune
то же, что int32

3	uint
32 или 64 bits

4	int
то же, что uint

5	uintptr
беззнаковое целочисленное для хранения необработанных бит значения указателя

-Мы знаем, что в десятичной системе самое большое число из одной цифры - это 9, а из двух - 99. В бинарной системе самое большое число из двух цифр это 11 (3), самое большое число из трех цифр это 111 (7) и самое большое число из 4 цифр это 1111 (15). Вопрос: каково самое большое число из 8 цифр? (Подсказка: 101-1=9 и 102-1=99)
255

В зависимости от задачи вы можете использовать Go как калькулятор. Напишите программу, которая вычисляет 32132 × 42452 и печатает это в терминал (используйте оператор * для умножения).
sum:=32132 * 42452
	fmt.Println(sum)


Что такое строка? Как найти её длину?
 строка — это последовательность символов определенной длины, используемая для представления текста.
 Строки в Go состоят из независимых байтов, обычно по одному на каждый символ
  (символы из других языков, таких как китайский, представляются несколькими байтами).

Строковые литералы могут быть созданы с помощью двойных кавычек "Hello World" или с помощью
апострофов `Hello World`. Различие между ними в том, что строки в двойных кавычках не могут
содержать новые строки и они позволяют использовать особые управляющие последовательности символов.
 Например, \n будет заменена символом новой строки, а \t - символом табуляции.

Распространенные операции над строками включают в себя нахождение длины строки len("Hello World"),
 доступ к отдельному символу в строке "Hello World"[1], и конкатенацию двух строк "Hello " + "World"

Какое значение примет выражение (true && false) || (false && true) || !(false && false)?